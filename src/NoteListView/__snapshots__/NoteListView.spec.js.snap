// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteListView component should display an empty list when no note 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "fontSize": 20,
        "margin": 10,
        "textAlign": "center",
      }
    }
  >
    Vous n'avez pas de notes
  </Text>
  <View
    style={
      Object {
        "bottom": 20,
        "position": "absolute",
        "right": 20,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Create
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`NoteListView component should display title note when 1 note 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <RCTScrollView>
    <View>
      <RCTScrollView
        data={
          Array [
            Object {
              "title": "my title",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "bottom": 20,
        "position": "absolute",
        "right": 20,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Create
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`NoteListView component should display title note when 2 notes 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <RCTScrollView>
    <View>
      <RCTScrollView
        data={
          Array [
            Object {
              "title": "my title",
            },
            Object {
              "title": "my title 2",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 2
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "bottom": 20,
        "position": "absolute",
        "right": 20,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Create
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`NoteListView component should display title note when many notes 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <RCTScrollView>
    <View>
      <RCTScrollView
        data={
          Array [
            Object {
              "title": "my title 0",
            },
            Object {
              "title": "my title 1",
            },
            Object {
              "title": "my title 2",
            },
            Object {
              "title": "my title 3",
            },
            Object {
              "title": "my title 4",
            },
            Object {
              "title": "my title 5",
            },
            Object {
              "title": "my title 6",
            },
            Object {
              "title": "my title 7",
            },
            Object {
              "title": "my title 8",
            },
            Object {
              "title": "my title 9",
            },
            Object {
              "title": "my title 10",
            },
            Object {
              "title": "my title 11",
            },
            Object {
              "title": "my title 12",
            },
            Object {
              "title": "my title 13",
            },
            Object {
              "title": "my title 14",
            },
            Object {
              "title": "my title 15",
            },
            Object {
              "title": "my title 16",
            },
            Object {
              "title": "my title 17",
            },
            Object {
              "title": "my title 18",
            },
            Object {
              "title": "my title 19",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 0
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 1
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 2
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 3
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 4
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 5
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 6
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 7
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 8
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "borderBottomColor": "darkgrey",
                  "borderBottomWidth": 1,
                  "fontSize": 26,
                  "padding": 20,
                }
              }
            >
              my title 9
            </Text>
          </View>
          <View
            style={
              Object {
                "height": 0,
              }
            }
          />
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "bottom": 20,
        "position": "absolute",
        "right": 20,
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Create
        </Text>
      </View>
    </View>
  </View>
</View>
`;
