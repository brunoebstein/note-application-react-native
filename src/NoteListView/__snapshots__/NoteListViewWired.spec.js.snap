// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteListViewWired component should render a list of notes 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "white",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView>
    <View>
      <RCTScrollView
        data={
          Array [
            Object {
              "content": "a content 1",
              "title": "a title 1",
            },
            Object {
              "content": "a content 2",
              "title": "a title 2",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "borderBottomColor": "black",
                    "borderBottomWidth": 1,
                    "color": "black",
                    "fontSize": 26,
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                  },
                  undefined,
                ]
              }
            >
              a title 1
            </Text>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "borderBottomColor": "black",
                    "borderBottomWidth": 1,
                    "color": "black",
                    "fontSize": 26,
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                  },
                  undefined,
                ]
              }
            >
              a title 2
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
  <View
    style={
      Array [
        Object {
          "bottom": 20,
          "position": "absolute",
          "right": 20,
        },
        undefined,
      ]
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Create
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`NoteListViewWired component should render a message with an empty list 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "white",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
      undefined,
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "black",
          "fontSize": 20,
          "marginBottom": 10,
          "marginLeft": 10,
          "marginRight": 10,
          "marginTop": 10,
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Vous n'avez pas de notes
  </Text>
  <View
    style={
      Array [
        Object {
          "bottom": 20,
          "position": "absolute",
          "right": 20,
        },
        undefined,
      ]
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Create
        </Text>
      </View>
    </View>
  </View>
</View>
`;
